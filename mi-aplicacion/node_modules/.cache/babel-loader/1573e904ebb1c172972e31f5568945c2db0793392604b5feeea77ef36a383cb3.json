{"ast":null,"code":"import { BASE_PATH } from './config';\nexport function listarProductosInventario() {\n  const url = `${BASE_PATH}api/products`;\n  const params = {\n    method: \"GET\"\n  };\n  return fetch(url, params).then(response => {\n    if (!response.ok) {\n      throw new Error('Error en la respuesta del servidor: ' + response.statusText);\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  }).catch(error => {\n    console.error(\"Error al listar categorías: \", error);\n    return {\n      errMsg: error.message,\n      success: false\n    };\n  });\n}\nexport function listarProductosRecomendados() {\n  const url = `${BASE_PATH}api/products/recomendados`;\n  const params = {\n    method: \"GET\"\n  };\n  return fetch(url, params).then(response => {\n    if (!response.ok) {\n      throw new Error('Error en la respuesta del servidor: ' + response.statusText);\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  }).catch(error => {\n    console.error(\"Error al listar recomendaciones: \", error);\n    return {\n      errMsg: error.message,\n      success: false\n    };\n  });\n}\nexport function updateProduct(productId, productData, movementData) {\n  const url = new URL(`${BASE_PATH}api/products/${productId}`);\n  const params = new URLSearchParams(movementData);\n  url.search = params.toString();\n  return fetch(url, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(productData)\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  }).catch(errMsg => {\n    return {\n      errMsg: errMsg.message,\n      success: false\n    };\n  });\n}\nexport function disableProduct(productId) {\n  return fetch(`${BASE_PATH}api/products/disable/${productId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  }).catch(errMsg => {\n    return {\n      errMsg: errMsg.message,\n      success: false\n    };\n  });\n}\nexport function addProducts(productId, productData, movementData) {\n  const url = new URL(`${BASE_PATH}api/products/add/${productId}`);\n  const params = new URLSearchParams(movementData);\n  url.search = params.toString();\n  return fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  }).catch(errMsg => {\n    return {\n      errMsg: errMsg.message,\n      success: false\n    };\n  });\n}\nexport function listarMovimientosProducto(productId) {\n  const url = `${BASE_PATH}api/movimientos/producto/${productId}`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(url, params).then(response => {\n    if (!response.ok) {\n      throw new Error('Error en la respuesta del servidor: ' + response.statusText);\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  }).catch(error => {\n    console.error(\"Error al listar movimientos del producto: \", error);\n    return {\n      errMsg: error.message,\n      success: false\n    };\n  });\n}\nexport function crearProducto(productData, movementData) {\n  const url = new URL(`${BASE_PATH}api/products`);\n  const params = new URLSearchParams(movementData);\n  url.search = params.toString();\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(productData)\n  }).then(response => response.json()).then(data => {\n    console.log('Producto creado:', data);\n    return data;\n  }).catch(error => {\n    console.error('Error al crear el producto:', error);\n  });\n}","map":{"version":3,"names":["BASE_PATH","listarProductosInventario","url","params","method","fetch","then","response","ok","Error","statusText","json","data","catch","error","console","errMsg","message","success","listarProductosRecomendados","updateProduct","productId","productData","movementData","URL","URLSearchParams","search","toString","headers","body","JSON","stringify","disableProduct","addProducts","listarMovimientosProducto","crearProducto","log"],"sources":["C:/Users/chris/Documents/Proyecto/mi-aplicacion/src/api/productos.js"],"sourcesContent":["import{BASE_PATH} from './config';\r\n\r\nexport function listarProductosInventario() {\r\n    const url = `${BASE_PATH}api/products`;\r\n    const params = {\r\n        method: \"GET\"\r\n    };\r\n    return fetch(url, params)\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Error en la respuesta del servidor: ' + response.statusText);\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        return data;\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Error al listar categorías: \", error);\r\n        return {\r\n            errMsg: error.message,\r\n            success: false\r\n        };\r\n    });\r\n    \r\n}\r\nexport function listarProductosRecomendados() {\r\n    const url = `${BASE_PATH}api/products/recomendados`;\r\n    const params = {\r\n        method: \"GET\"\r\n    };\r\n    return fetch(url, params)\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Error en la respuesta del servidor: ' + response.statusText);\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        return data;\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Error al listar recomendaciones: \", error);\r\n        return {\r\n            errMsg: error.message,\r\n            success: false\r\n        };\r\n    });\r\n    \r\n}\r\n\r\nexport function updateProduct(productId, productData,movementData) {\r\n    const url = new URL(`${BASE_PATH}api/products/${productId}`);\r\n    const params = new URLSearchParams(movementData);\r\n    url.search = params.toString();\r\n\r\n    return fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(productData)\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        return data;\r\n    })\r\n    .catch(errMsg => {\r\n        return {\r\n            errMsg: errMsg.message,\r\n            success: false\r\n        };\r\n    });\r\n}\r\n\r\nexport function disableProduct(productId) {\r\n    return fetch(`${BASE_PATH}api/products/disable/${productId}`, {\r\n        method: 'PATCH',  \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        return data;\r\n    })\r\n    .catch(errMsg => {\r\n        return {\r\n            errMsg: errMsg.message,\r\n            success: false\r\n        };\r\n    });\r\n}\r\nexport function addProducts(productId,productData,movementData) {\r\n    const url=new URL(`${BASE_PATH}api/products/add/${productId}`);\r\n    const params = new URLSearchParams(movementData);\r\n    url.search = params.toString();\r\n    return fetch(url, {\r\n        method: 'PATCH', \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        return data;\r\n    })\r\n    .catch(errMsg => {\r\n        return {\r\n            errMsg: errMsg.message,\r\n            success: false\r\n        };\r\n    });\r\n}\r\nexport function listarMovimientosProducto(productId) {\r\n    const url = `${BASE_PATH}api/movimientos/producto/${productId}`;\r\n    const params = {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    return fetch(url, params)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Error en la respuesta del servidor: ' + response.statusText);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error al listar movimientos del producto: \", error);\r\n            return {\r\n                errMsg: error.message,\r\n                success: false\r\n            };\r\n        });\r\n}\r\n\r\nexport function crearProducto(productData,movementData) {\r\n    const url = new URL(`${BASE_PATH}api/products`);\r\n    const params = new URLSearchParams(movementData);\r\n    url.search = params.toString();\r\n    return fetch(url, { \r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(productData)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log('Producto creado:', data);\r\n        return data;\r\n    })\r\n    .catch(error => {\r\n        console.error('Error al crear el producto:', error);\r\n    });\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}