{"ast":null,"code":"import { BASE_PATH } from './config';\nexport function crearPromocion(promocion) {\n  const url = new URL(`${BASE_PATH}api/promociones/registrar`);\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(promocion)\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.text(); // Obtener el texto de la respuesta\n  }).then(responseText => {\n    if (responseText) {\n      // Solo intentar parsear si hay contenido en la respuesta\n      return JSON.parse(responseText);\n    }\n    return {}; // Devolver un objeto vacío si no hay contenido\n  }).then(data => {\n    console.log('Promocion creada:', data);\n    return data;\n  }).catch(error => {\n    console.error('Error al crear la promocion:', error);\n  });\n}","map":{"version":3,"names":["BASE_PATH","crearPromocion","promocion","url","URL","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","text","responseText","parse","data","console","log","catch","error"],"sources":["C:/Users/chris/Documents/Proyecto/mi-aplicacion/src/api/promocion.js"],"sourcesContent":["import{BASE_PATH} from './config';\r\n\r\nexport function crearPromocion(promocion) {\r\n    const url = new URL(`${BASE_PATH}api/promociones/registrar`);\r\n    \r\n    return fetch(url, { \r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(promocion)\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.text(); // Obtener el texto de la respuesta\r\n    })\r\n    .then(responseText => {\r\n        if (responseText) {\r\n            // Solo intentar parsear si hay contenido en la respuesta\r\n            return JSON.parse(responseText);\r\n        }\r\n        return {}; // Devolver un objeto vacío si no hay contenido\r\n    })\r\n    .then(data => {\r\n        console.log('Promocion creada:', data);\r\n        return data;\r\n    })\r\n    .catch(error => {\r\n        console.error('Error al crear la promocion:', error);\r\n    });\r\n}\r\n"],"mappings":"AAAA,SAAOA,SAAS,QAAO,UAAU;AAEjC,OAAO,SAASC,cAAcA,CAACC,SAAS,EAAE;EACtC,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAE,GAAEJ,SAAU,2BAA0B,CAAC;EAE5D,OAAOK,KAAK,CAACF,GAAG,EAAE;IACdG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,SAAS;EAClC,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;IAC7D;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC,CACDL,IAAI,CAACM,YAAY,IAAI;IAClB,IAAIA,YAAY,EAAE;MACd;MACA,OAAOR,IAAI,CAACS,KAAK,CAACD,YAAY,CAAC;IACnC;IACA,OAAO,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CACDN,IAAI,CAACQ,IAAI,IAAI;IACVC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;IACtC,OAAOA,IAAI;EACf,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACxD,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}