{"ast":null,"code":"import { BASE_PATH } from './config';\nexport function listarMarcas() {\n  const url = `${BASE_PATH}api/marcas`;\n  const params = {\n    method: \"GET\"\n  };\n  return fetch(url, params).then(response => {\n    if (!response.ok) {\n      throw new Error('Error en la respuesta del servidor: ' + response.statusText);\n    }\n    return response.json();\n  }).then(data => {\n    return data;\n  }).catch(error => {\n    console.error(\"Error al listar categorías: \", error);\n    return {\n      errMsg: error.message,\n      success: false\n    };\n  });\n}\nexport function crearMarca(brandName) {\n  return fetch(`${BASE_PATH}api/marcas`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      nombre: brandName\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  }).then(data => {\n    console.log('Marca creada con éxito:', data);\n    return data;\n  }).catch(error => {\n    console.error('Error al crear la marca:', error);\n  });\n}","map":{"version":3,"names":["BASE_PATH","listarMarcas","url","params","method","fetch","then","response","ok","Error","statusText","json","data","catch","error","console","errMsg","message","success","crearMarca","brandName","headers","body","JSON","stringify","nombre","status","log"],"sources":["C:/Users/chris/Documents/Proyecto/mi-aplicacion/src/api/marca.js"],"sourcesContent":["import{BASE_PATH} from './config';\r\n\r\nexport function listarMarcas() {\r\n    const url = `${BASE_PATH}api/marcas`;\r\n    const params = {\r\n        method: \"GET\"\r\n    };\r\n    return fetch(url, params)\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Error en la respuesta del servidor: ' + response.statusText);\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        return data;\r\n    })\r\n    .catch(error => {\r\n        console.error(\"Error al listar categorías: \", error);\r\n        return {\r\n            errMsg: error.message,\r\n            success: false\r\n        };\r\n    });\r\n}\r\nexport function crearMarca(brandName) {\r\n    return fetch(`${BASE_PATH}api/marcas`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ nombre: brandName })\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      console.log('Marca creada con éxito:', data);\r\n      return data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error al crear la marca:', error);\r\n    });\r\n  }\r\n"],"mappings":"AAAA,SAAOA,SAAS,QAAO,UAAU;AAEjC,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC3B,MAAMC,GAAG,GAAI,GAAEF,SAAU,YAAW;EACpC,MAAMG,MAAM,GAAG;IACXC,MAAM,EAAE;EACZ,CAAC;EACD,OAAOC,KAAK,CAACH,GAAG,EAAEC,MAAM,CAAC,CACxBG,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,sCAAsC,GAAGF,QAAQ,CAACG,UAAU,CAAC;IACjF;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;IACV,OAAOA,IAAI;EACf,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO;MACHE,MAAM,EAAEF,KAAK,CAACG,OAAO;MACrBC,OAAO,EAAE;IACb,CAAC;EACL,CAAC,CAAC;AACN;AACA,OAAO,SAASC,UAAUA,CAACC,SAAS,EAAE;EAClC,OAAOf,KAAK,CAAE,GAAEL,SAAU,YAAW,EAAE;IACrCI,MAAM,EAAE,MAAM;IACdiB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAEL;IAAU,CAAC;EAC5C,CAAC,CAAC,CACDd,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACmB,MAAO,EAAC,CAAC;IAC3D;IACA,OAAOnB,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;IACZG,OAAO,CAACY,GAAG,CAAC,yBAAyB,EAAEf,IAAI,CAAC;IAC5C,OAAOA,IAAI;EACb,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}