{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Documents\\\\Proyecto\\\\mi-aplicacion\\\\src\\\\components\\\\TablePrices.js\";\nimport React from 'react';\nimport './TableMovement.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TablePrices = ({\n  precios = []\n}) => {\n  // Function to format date strings to only display the date part\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    }).format(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products-table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"N\\xFAmero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Usuario de registro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Precio de venta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha Inicial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha Final\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: precios.map((precio, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: precio.usuario.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: precio.precioActual.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(precio.fechaInicio)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: precio.fechaFinal === '2099-01-01T00:00:00' ? '-' : formatDate(precio.fechaFinal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: precio.estado === 0 ? 'Inactivo' : 'Vigente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, precio.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = TablePrices;\nexport default TablePrices;\nvar _c;\n$RefreshReg$(_c, \"TablePrices\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TablePrices","precios","formatDate","dateString","date","Date","Intl","DateTimeFormat","day","month","year","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","precio","index","usuario","nombre","precioActual","toFixed","fechaInicio","fechaFinal","estado","id","_c","$RefreshReg$"],"sources":["C:/Users/chris/Documents/Proyecto/mi-aplicacion/src/components/TablePrices.js"],"sourcesContent":["import React from 'react';\r\nimport './TableMovement.scss'\r\n\r\nconst TablePrices = ({ precios = [] }) => {\r\n    // Function to format date strings to only display the date part\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return '';\r\n        const date = new Date(dateString);\r\n        return new Intl.DateTimeFormat('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' }).format(date);\r\n    };\r\n\r\n    return (\r\n        <div className=\"products-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>NÃºmero</th>\r\n                        <th>Usuario de registro</th>\r\n                        <th>Precio de venta</th>\r\n                        <th>Fecha Inicial</th>\r\n                        <th>Fecha Final</th>\r\n                        <th>Estado</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {precios.map((precio, index) => (\r\n                        <tr key={precio.id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{precio.usuario.nombre}</td>\r\n                            <td>{precio.precioActual.toFixed(2)}</td>\r\n                            <td>{formatDate(precio.fechaInicio)}</td>\r\n                            <td>{precio.fechaFinal === '2099-01-01T00:00:00' ? '-' : formatDate(precio.fechaFinal)}</td>\r\n                            <td>{precio.estado === 0 ? 'Inactivo' : 'Vigente'}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePrices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}