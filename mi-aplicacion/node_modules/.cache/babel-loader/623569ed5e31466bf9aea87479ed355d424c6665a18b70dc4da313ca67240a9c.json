{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Documents\\\\Proyecto\\\\mi-aplicacion\\\\src\\\\components\\\\ModalFindProudct.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ModalAddBrand.scss'; // Asumiendo que tienes un archivo SCSS separado para los estilos\nimport './ModalFindProduct.scss';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalFindProduct = ({\n  isOpen,\n  onClose,\n  onAdd,\n  categories,\n  brands,\n  productslist\n}) => {\n  _s();\n  const [brandName, setBrandName] = useState('');\n  const [category, setCategory] = useState(categories);\n  const [brand, setBrand] = useState(brands);\n  const [products, setProducts] = useState([]); // Aquí almacenas los productos obtenidos de alguna API o prop\n  const [filteredProducts, setFilteredProducts] = useState([]); // Los productos que coinciden con los filtros\n\n  // Suponiendo que recibes los productos como prop y los inicializas así:\n  useEffect(() => {\n    setProducts(productslist); // Asumiendo que `props.products` contiene todos los productos\n    setFilteredProducts(productslist);\n  }, [productslist]);\n  const filterProducts = () => {\n    let tempProducts = products;\n    if (category) {\n      tempProducts = tempProducts.filter(product => product.categoria.id === category);\n    }\n    if (brand) {\n      tempProducts = tempProducts.filter(product => product.marca.id === brand);\n    }\n    if (brandName) {\n      tempProducts = tempProducts.filter(product => product.nombre.toLowerCase().includes(brandName.toLowerCase()));\n    }\n    setFilteredProducts(tempProducts);\n  };\n  const handleAddClick = () => {\n    onAdd(brandName);\n    setBrandName(''); // Resetear el nombre de la marca después de añadir\n  };\n  if (!isOpen) {\n    return null;\n  }\n  const handleCategoryChange = event => {\n    setCategory(event.target.value);\n    filterProducts(); // Llama a filterProducts después de establecer el estado\n  };\n  const handleBrandChange = event => {\n    setBrand(event.target.value);\n    filterProducts(); // Llama a filterProducts después de establecer el estado\n  };\n  const handleBrandNameChange = event => {\n    setBrandName(event.target.value);\n  };\n\n  // Llama a filterProducts después de un retraso, para no sobrecargar mientras se escribe\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      filterProducts();\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [brandName, category, brand, products]); // Reaccionar cuando estos valores cambien\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buscar producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Categor\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione la categor\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), categories.map((categoria, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: categoria.idCategoria,\n            children: categoria.nombre\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Marca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: brand,\n          onChange: e => setBrand(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione la marca\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), brands.map((marca, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: marca.idMarca,\n            children: marca.nombre\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 45\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: brandName,\n        onChange: handleBrandNameChange,\n        className: \"brand-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"cancel-button\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddClick,\n          className: \"add-button\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalFindProduct, \"CM4U26UCmGtUjiNMCGesO/47Cv4=\");\n_c = ModalFindProduct;\nexport default ModalFindProduct;\nvar _c;\n$RefreshReg$(_c, \"ModalFindProduct\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ModalFindProduct","isOpen","onClose","onAdd","categories","brands","productslist","_s","brandName","setBrandName","category","setCategory","brand","setBrand","products","setProducts","filteredProducts","setFilteredProducts","filterProducts","tempProducts","filter","product","categoria","id","marca","nombre","toLowerCase","includes","handleAddClick","handleCategoryChange","event","target","value","handleBrandChange","handleBrandNameChange","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","map","index","idCategoria","idMarca","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/chris/Documents/Proyecto/mi-aplicacion/src/components/ModalFindProudct.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ModalAddBrand.scss'; // Asumiendo que tienes un archivo SCSS separado para los estilos\r\nimport './ModalFindProduct.scss';\r\nimport { useEffect } from 'react';\r\nconst ModalFindProduct = ({ isOpen, onClose, onAdd,categories,brands,productslist}) => {\r\n  const [brandName, setBrandName] = useState('');\r\n  const [category, setCategory] = useState(categories);\r\n  const [brand, setBrand] = useState(brands);\r\n\r\n\r\n  const [products, setProducts] = useState([]); // Aquí almacenas los productos obtenidos de alguna API o prop\r\n  const [filteredProducts, setFilteredProducts] = useState([]); // Los productos que coinciden con los filtros\r\n\r\n  // Suponiendo que recibes los productos como prop y los inicializas así:\r\n  useEffect(() => {\r\n    setProducts(productslist); // Asumiendo que `props.products` contiene todos los productos\r\n    setFilteredProducts(productslist);\r\n  }, [productslist]);\r\n  const filterProducts = () => {\r\n    let tempProducts = products;\r\n  \r\n    if (category) {\r\n      tempProducts = tempProducts.filter(product => product.categoria.id === category);\r\n    }\r\n  \r\n    if (brand) {\r\n      tempProducts = tempProducts.filter(product => product.marca.id === brand);\r\n    }\r\n  \r\n    if (brandName) {\r\n      tempProducts = tempProducts.filter(product => product.nombre.toLowerCase().includes(brandName.toLowerCase()));\r\n    }\r\n  \r\n    setFilteredProducts(tempProducts);\r\n  };\r\n  \r\n  const handleAddClick = () => {\r\n    onAdd(brandName);\r\n    setBrandName(''); // Resetear el nombre de la marca después de añadir\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n    filterProducts(); // Llama a filterProducts después de establecer el estado\r\n  };\r\n  \r\n  const handleBrandChange = (event) => {\r\n    setBrand(event.target.value);\r\n    filterProducts(); // Llama a filterProducts después de establecer el estado\r\n  };\r\n  \r\n  const handleBrandNameChange = (event) => {\r\n    setBrandName(event.target.value);\r\n  };\r\n  \r\n  // Llama a filterProducts después de un retraso, para no sobrecargar mientras se escribe\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      filterProducts();\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [brandName, category, brand, products]); // Reaccionar cuando estos valores cambien\r\n  \r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-container\">\r\n        <h2>Buscar producto</h2>\r\n        <div className=\"input-group\">\r\n          <label>Categoría</label>\r\n          <select value={category} onChange={e => setCategory(e.target.value)}>\r\n            <option value=\"\">Seleccione la categoría</option>\r\n            {categories.map((categoria,index) => (\r\n                                        <option key={index} value={categoria.idCategoria}>\r\n                                            {categoria.nombre}\r\n                                        </option>\r\n                                    ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Marca</label>\r\n          <select value={brand} onChange={e => setBrand(e.target.value)}>\r\n            <option value=\"\">Seleccione la marca</option>\r\n            {brands.map((marca,index) => (\r\n                                            <option key={index} value={marca.idMarca}>\r\n                                                {marca.nombre}\r\n                                            </option>\r\n                                        ))}\r\n          </select>\r\n        </div>\r\n        <label>Nombre:</label>\r\n        <input \r\n          type=\"text\" \r\n          value={brandName} \r\n          onChange={handleBrandNameChange}\r\n          className=\"brand-input\"\r\n        />\r\n        <div className=\"modal-buttons\">\r\n          <button onClick={onClose} className=\"cancel-button\">Cancelar</button>\r\n          <button onClick={handleAddClick} className=\"add-button\">Buscar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalFindProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}