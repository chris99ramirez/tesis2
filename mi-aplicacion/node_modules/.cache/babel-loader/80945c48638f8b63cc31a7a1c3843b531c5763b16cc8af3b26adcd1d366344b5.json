{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Documents\\\\Proyecto\\\\mi-aplicacion\\\\src\\\\components\\\\ModalFindProudct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ModalAddBrand.scss';\nimport './ModalFindProduct.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalFindProduct = ({\n  isOpen,\n  onClose,\n  onAdd,\n  categories,\n  brands,\n  productslist\n}) => {\n  _s();\n  const [brandName, setBrandName] = useState('');\n  const [category, setCategory] = useState('');\n  const [brand, setBrand] = useState('');\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    if (isOpen) {\n      // S칩lo establece los productos si el modal est치 abierto\n      setProducts(productslist);\n      setFilteredProducts(productslist);\n    }\n  }, [productslist, isOpen]);\n  useEffect(() => {\n    // Este efecto no debe ser condicional y debe ejecutarse siempre\n    const timer = setTimeout(() => {\n      filterProducts();\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [brandName, category, brand, products]); // Reaccionar cuando estos valores cambien\n\n  const filterProducts = () => {\n    let tempProducts = products;\n    if (category) {\n      tempProducts = tempProducts.filter(product => product.categoria.id === category);\n    }\n    if (brand) {\n      tempProducts = tempProducts.filter(product => product.marca.id === brand);\n    }\n    if (brandName) {\n      tempProducts = tempProducts.filter(product => product.nombre.toLowerCase().includes(brandName.toLowerCase()));\n    }\n    setFilteredProducts(tempProducts);\n  };\n\n  // Los manejadores de cambio actualizan los estados y dependen del filterProducts en el useEffect de arriba\n  const handleCategoryChange = event => setCategory(event.target.value);\n  const handleBrandChange = event => setBrand(event.target.value);\n  const handleBrandNameChange = event => setBrandName(event.target.value);\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalFindProduct, \"Ne60s/KQTziWk2vLLmSJSLVXh80=\");\n_c = ModalFindProduct;\nexport default ModalFindProduct;\nvar _c;\n$RefreshReg$(_c, \"ModalFindProduct\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ModalFindProduct","isOpen","onClose","onAdd","categories","brands","productslist","_s","brandName","setBrandName","category","setCategory","brand","setBrand","products","setProducts","filteredProducts","setFilteredProducts","timer","setTimeout","filterProducts","clearTimeout","tempProducts","filter","product","categoria","id","marca","nombre","toLowerCase","includes","handleCategoryChange","event","target","value","handleBrandChange","handleBrandNameChange","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Documents/Proyecto/mi-aplicacion/src/components/ModalFindProudct.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ModalAddBrand.scss';\r\nimport './ModalFindProduct.scss';\r\n\r\nconst ModalFindProduct = ({ isOpen, onClose, onAdd, categories, brands, productslist }) => {\r\n  const [brandName, setBrandName] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // S칩lo establece los productos si el modal est치 abierto\r\n      setProducts(productslist);\r\n      setFilteredProducts(productslist);\r\n    }\r\n  }, [productslist, isOpen]);\r\n\r\n  useEffect(() => {\r\n    // Este efecto no debe ser condicional y debe ejecutarse siempre\r\n    const timer = setTimeout(() => {\r\n      filterProducts();\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [brandName, category, brand, products]); // Reaccionar cuando estos valores cambien\r\n\r\n  const filterProducts = () => {\r\n    let tempProducts = products;\r\n\r\n    if (category) {\r\n      tempProducts = tempProducts.filter(product => product.categoria.id === category);\r\n    }\r\n\r\n    if (brand) {\r\n      tempProducts = tempProducts.filter(product => product.marca.id === brand);\r\n    }\r\n\r\n    if (brandName) {\r\n      tempProducts = tempProducts.filter(product => product.nombre.toLowerCase().includes(brandName.toLowerCase()));\r\n    }\r\n\r\n    setFilteredProducts(tempProducts);\r\n  };\r\n\r\n  // Los manejadores de cambio actualizan los estados y dependen del filterProducts en el useEffect de arriba\r\n  const handleCategoryChange = event => setCategory(event.target.value);\r\n  const handleBrandChange = event => setBrand(event.target.value);\r\n  const handleBrandNameChange = event => setBrandName(event.target.value);\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      {/* ... resto de tu componente ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalFindProduct;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAC7B,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,KAAK;EAAEC,UAAU;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,EAAE;MACV;MACAc,WAAW,CAACT,YAAY,CAAC;MACzBW,mBAAmB,CAACX,YAAY,CAAC;IACnC;EACF,CAAC,EAAE,CAACA,YAAY,EAAEL,MAAM,CAAC,CAAC;EAE1BJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BC,cAAc,CAAC,CAAC;IAClB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMC,YAAY,CAACH,KAAK,CAAC;EAClC,CAAC,EAAE,CAACV,SAAS,EAAEE,QAAQ,EAAEE,KAAK,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5C,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIE,YAAY,GAAGR,QAAQ;IAE3B,IAAIJ,QAAQ,EAAE;MACZY,YAAY,GAAGA,YAAY,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,SAAS,CAACC,EAAE,KAAKhB,QAAQ,CAAC;IAClF;IAEA,IAAIE,KAAK,EAAE;MACTU,YAAY,GAAGA,YAAY,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACG,KAAK,CAACD,EAAE,KAAKd,KAAK,CAAC;IAC3E;IAEA,IAAIJ,SAAS,EAAE;MACbc,YAAY,GAAGA,YAAY,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACI,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,SAAS,CAACqB,WAAW,CAAC,CAAC,CAAC,CAAC;IAC/G;IAEAZ,mBAAmB,CAACK,YAAY,CAAC;EACnC,CAAC;;EAED;EACA,MAAMS,oBAAoB,GAAGC,KAAK,IAAIrB,WAAW,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrE,MAAMC,iBAAiB,GAAGH,KAAK,IAAInB,QAAQ,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/D,MAAME,qBAAqB,GAAGJ,KAAK,IAAIvB,YAAY,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAEvE,IAAI,CAACjC,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,oBACEF,OAAA;IAAKsC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAAClC,EAAA,CAvDIP,gBAAgB;AAAA0C,EAAA,GAAhB1C,gBAAgB;AAyDtB,eAAeA,gBAAgB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}